{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class InputComponent {\n  constructor() {\n    this.messageControl = new FormControl('');\n    this.messageSend = new EventEmitter();\n  }\n  sendMessage() {\n    if (this.messageControl.value.trim()) {\n      this.messageSend.emit(this.messageControl.value);\n      this.messageControl.reset(); // Clear the input after sending\n    }\n  }\n  static #_ = this.ɵfac = function InputComponent_Factory(t) {\n    return new (t || InputComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputComponent,\n    selectors: [[\"app-input\"]],\n    outputs: {\n      messageSend: \"messageSend\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[3, \"submit\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Type your message here...\", 1, \"form-control\", 3, \"formControl\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function InputComponent_Template_form_submit_0_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Send\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.messageControl);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormControl","InputComponent","constructor","messageControl","messageSend","sendMessage","value","trim","emit","reset","_","_2","selectors","outputs","decls","vars","consts","template","InputComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","InputComponent_Template_form_submit_0_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Ashiqur\\OneDrive\\Desktop\\websocket\\frontend\\src\\app\\input\\input.component.ts","C:\\Users\\Ashiqur\\OneDrive\\Desktop\\websocket\\frontend\\src\\app\\input\\input.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent {\n\n  messageControl = new FormControl('');\n\n  @Output() messageSend = new EventEmitter<string>();\n\n  sendMessage() {\n    if (this.messageControl.value.trim()) {\n      this.messageSend.emit(this.messageControl.value);\n      this.messageControl.reset(); // Clear the input after sending\n    }\n  }\n\n\n}\n","<form (submit)=\"sendMessage()\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type your message here...\" [formControl]=\"messageControl\">\n        <button class=\"btn btn-outline-secondary\" type=\"submit\">Send</button>\n    </div>\n</form>"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;AAC/D,SAASC,WAAW,QAAQ,gBAAgB;;;AAM5C,OAAM,MAAOC,cAAc;EAL3BC,YAAA;IAOE,KAAAC,cAAc,GAAG,IAAIH,WAAW,CAAC,EAAE,CAAC;IAE1B,KAAAI,WAAW,GAAG,IAAIL,YAAY,EAAU;;EAElDM,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,cAAc,CAACG,KAAK,CAACC,IAAI,EAAE,EAAE;MACpC,IAAI,CAACH,WAAW,CAACI,IAAI,CAAC,IAAI,CAACL,cAAc,CAACG,KAAK,CAAC;MAChD,IAAI,CAACH,cAAc,CAACM,KAAK,EAAE,CAAC,CAAC;;EAEjC;EAAC,QAAAC,CAAA,G;qBAXUT,cAAc;EAAA;EAAA,QAAAU,EAAA,G;UAAdV,cAAc;IAAAW,SAAA;IAAAC,OAAA;MAAAT,WAAA;IAAA;IAAAU,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BE,EAAA,CAAAC,cAAA,cAA+B;QAAzBD,EAAA,CAAAE,UAAA,oBAAAC,+CAAA;UAAA,OAAUJ,GAAA,CAAAf,WAAA,EAAa;QAAA,EAAC;QAC1BgB,EAAA,CAAAC,cAAA,aAA8B;QAC1BD,EAAA,CAAAI,SAAA,eAA+G;QAC/GJ,EAAA,CAAAC,cAAA,gBAAwD;QAAAD,EAAA,CAAAK,MAAA,WAAI;QAAAL,EAAA,CAAAM,YAAA,EAAS;;;QADWN,EAAA,CAAAO,SAAA,GAA8B;QAA9BP,EAAA,CAAAQ,UAAA,gBAAAT,GAAA,CAAAjB,cAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}